"use strict";

if (document.getElementById("index")) {
  var swiperAfterHero = new Swiper(".after-hero__content", {
    slidesPerView: 1,
    spaceBetween: 20,
    pagination: {
      el: ".after-hero__pagination"
    },
    breakpoints: {
      700: {
        slidesPerView: 2,
        spaceBetween: 20
      },
      1400: {
        slidesPerView: 3,
        spaceBetween: 20
      }
    }
  });
  var feedbackInputs = document.querySelectorAll(".input-form");
  feedbackInputs.forEach(function (input) {
    input.addEventListener("blur", function () {
      checkForCompletion(input);
    });
    input.addEventListener("focus", function () {
      input.parentElement.classList.add("active");
    });
    checkForCompletion(input);
  });
}

if (document.getElementById("blog")) {
  var elems = document.querySelectorAll(".blog__head-item");
  activeElem(elems);
}

if (document.getElementById("about")) {
  var swiperYear = new Swiper(".about-history__tab-swiper", {
    slidesPerView: "auto",
    spaceBetween: 20,
    freeMode: true,
    watchSlidesProgress: true,
    breakpoints: {
      320: {
        spaceBetween: 20
      },
      768: {
        spaceBetween: 100
      }
    }
  });
  var swiperHistory = new Swiper(".about-history__bottom-swiper", {
    spaceBetween: 10,
    allowTouchMove: false,
    thumbs: {
      swiper: swiperYear
    },
    navigation: {
      nextEl: ".about-history__btn-next",
      prevEl: ".about-history__btn-prev"
    }
  });
  ymaps.ready(initMap);

  var _feedbackInputs = document.querySelectorAll(".input-form");

  _feedbackInputs.forEach(function (input) {
    input.addEventListener("blur", function () {
      checkForCompletion(input);
    });
    input.addEventListener("focus", function () {
      input.parentElement.classList.add("active");
    });
    checkForCompletion(input);
  });
}

if (document.getElementById("details")) {
  var swiper = new Swiper(".details-top__swiper2", {
    slidesPerView: 4,
    spaceBetween: 10,
    freeMode: true,
    watchSlidesProgress: true
  });
  var swiper2 = new Swiper(".details-top__swiper", {
    spaceBetween: 10,
    thumbs: {
      swiper: swiper
    }
  });
}

function checkForCompletion(input) {
  if (input.value.length > 0) {
    input.parentElement.classList.add("active");
  } else {
    input.parentElement.classList.remove("active");
  }
}

function activeElem(elems) {
  elems.forEach(function (elem) {
    elem.addEventListener("click", function () {
      elems.forEach(function (el) {
        return el.classList.remove("active");
      });
      elem.classList.add("active");
    });
  });
}

function initMap() {
  var myMap = new ymaps.Map("about__map", {
    center: [55.79402656892602, 37.48264549999995],
    zoom: 18,
    controls: []
  }); // Создание метки с круглой активной областью.

  var circleLayout = ymaps.templateLayoutFactory.createClass("<div class=\"placemark_layout_container\">\n        <span class=\"circle_layout\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"33\" viewBox=\"0 0 25 33\" fill=\"none\">\n                <rect width=\"24\" height=\"33\" transform=\"translate(1)\" fill=\"white\"/>\n                <path d=\"M23.79 11.0948C23.79 14.0105 22.0886 17.961 19.7067 21.9555C17.46 25.7235 14.6591 29.4479 12.2878 32.2348C9.78094 29.3239 6.974 25.5926 4.75877 21.8502C2.41771 17.8952 0.790039 14.0135 0.790039 11.0948C0.790039 5.27967 5.90112 0.5 12.29 0.5C18.679 0.5 23.79 5.27967 23.79 11.0948Z\" fill=\"#FFD341\" stroke=\"#FFCE00\"/>\n                <circle cx=\"12.29\" cy=\"12\" r=\"5.5\" fill=\"white\" stroke=\"#FFCE00\"/>\n            </svg>\n        </span>\n    </div>");
  var BalloonContentLayout = ymaps.templateLayoutFactory.createClass("\n        <div class=\"hint_layout_container\">\n            <div class=\"hint_layout_content\">\n                <div class=\"hint_layout_head\">\n                    {{ properties.name }}\n                </div>\n                <div class=\"hint_layout_body\">\n                    <div class=\"hint_layout_city\">\n                        <span class=\"hint_layout_svg\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"14\" viewBox=\"0 0 11 14\" fill=\"none\">\n                                <path d=\"M9.91641 4.53803C9.91641 6.98903 7.08564 11.0242 5.11641 13.3001C3.0241 10.9104 0.316406 6.98903 0.316406 4.53803C0.316406 2.08703 2.46544 0.100098 5.11641 0.100098C7.76737 0.100098 9.91641 2.08703 9.91641 4.53803Z\" fill=\"#21201C\"/>\n                                <circle cx=\"5.11875\" cy=\"4.9\" r=\"2.4\" fill=\"white\"/>\n                            </svg>\n                        </span>\n                        <span class=\"hint_layout_text\">\n                            {{ properties.city }}   \n                        </span>\n                    </div>\n                    <div class=\"hint_layout_address hint_layout_text\">\n                        {{ properties.address }}    \n                    </div>\n                    <div class=\"hint_layout_phone hint_layout_text\">\n                    {{ properties.phone }}    \n                    </div>\n                </div>\n            </div>\n        </div>\n        \n     ");
  var circlePlacemark = new ymaps.Placemark([55.79402656892602, 37.48264549999995], {
    name: "Центральный офис",
    city: "Москва",
    address: "РФ, 123060, Москва ул. Расплетина, дом 5, стр.9",
    phone: "+7 (495) 760-91-96 "
  }, {
    balloonContentLayout: BalloonContentLayout,
    hideIconOnBalloonOpen: false,
    iconLayout: circleLayout,
    iconShape: {
      type: 'Circle',
      coordinates: [0, 0],
      radius: 25
    }
  });
  myMap.geoObjects.add(circlePlacemark);
  myMap.behaviors.disable('drag');
  myMap.behaviors.disable('scrollZoom');
  myMap.controls.remove('searchControl');
  myMap.controls.remove('trafficControl');
  myMap.controls.remove('typeSelector');
  myMap.controls.remove('fullscreenControl');
  myMap.controls.remove('rulerControl');
}

document.addEventListener("click", function (e) {
  headerSelect.forEach(function (elem) {
    if (!elem.contains(e.target)) {
      elem.classList.remove("active");
    }
  });
});
var burger = document.querySelector(".header__burger");
var menu = document.querySelector(".header__menu");
var headerTabBtn = document.querySelectorAll('.header__select-list-item-btn');
var headerTabList = document.querySelectorAll(".header__select-right-list");
var select = document.querySelectorAll(".header__select");

function applyEventListeners() {
  if (window.matchMedia("(max-width: 1150px)").matches) {
    burger.addEventListener("click", function () {
      burger.classList.toggle("active");
      menu.classList.toggle("active");

      if (burger.classList.contains("active")) {
        document.body.classList.add("lock");
      } else {
        document.body.classList.remove("lock");
      }
    });
    select.forEach(function (elem) {
      elem.firstElementChild.addEventListener("click", function () {
        elem.classList.toggle("active");
      });
    });
    headerTabBtn.forEach(function (btn) {
      btn.addEventListener('click', function () {
        headerTabList.forEach(function (item) {
          item.classList.remove("active");
        });
        headerTabList.forEach(function (item) {
          if (btn.dataset.target === item.dataset.path) {
            item.classList.add("active");
          }
        });
      });
    });
  } else {
    select.forEach(function (elem) {
      elem.addEventListener("mouseover", function () {
        elem.classList.add("active");
      });
      elem.addEventListener("mouseleave", function (e) {
        if (!elem.contains(e.relatedTarget)) {
          elem.classList.remove("active");
          headerTabBtn.forEach(function (btn) {
            btn.classList.remove("active");
          });
          headerTabList.forEach(function (item) {
            item.classList.remove("active");
          });
        }
      });
    });
    headerTabBtn.forEach(function (btn) {
      btn.addEventListener("click", function () {
        headerTabBtn.forEach(function (btn) {
          btn.classList.remove("active");
        });
        headerTabList.forEach(function (item) {
          item.classList.remove("active");
        });
        headerTabList.forEach(function (item) {
          if (btn.dataset.target === item.dataset.path) {
            item.classList.add("active");
            btn.classList.add("active");
          }
        });
      });
    });
  }
}

document.addEventListener("DOMContentLoaded", applyEventListeners);
window.addEventListener("resize", applyEventListeners);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
